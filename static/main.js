// Generated by CoffeeScript 1.9.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

require(['base/js/namespace', 'jquery', 'notebook/js/notebook', 'orm/cookies', 'contents', 'services/config', 'base/js/utils', 'base/js/page', 'base/js/events', 'notebook/js/actions', 'notebook/js/kernelselector', 'codemirror/lib/codemirror', 'custom/custom'], function(IPython, $, notebook, cookies, contents, configmod, utils, page, events, actions, kernelselector, CodeMirror, custom) {
  var Thebe;
  Thebe = (function() {
    function Thebe(_at_selector, _at_tmpnb_url) {
      this.selector = _at_selector;
      this.tmpnb_url = _at_tmpnb_url;
      this.execute_below = __bind(this.execute_below, this);
      this.kernel_ready = __bind(this.kernel_ready, this);
      this.spawn_handler = __bind(this.spawn_handler, this);
      this.events = events;
      this.spawn_handler = _.once(this.spawn_handler);
      this.call_spawn();
    }

    Thebe.prototype.spawn_handler = function(e) {
      console.log(e.type);
      return this.start_notebook(e.target.responseURL.replace('/tree', '/'));
    };

    Thebe.prototype.call_spawn = function(invocation) {
      if (invocation == null) {
        invocation = new XMLHttpRequest;
      }
      invocation.open('GET', this.tmpnb_url, true);
      invocation.onreadystatechange = this.spawn_handler;
      return invocation.send();
    };

    Thebe.prototype.kernel_ready = function(x) {
      this.notebook.writable = false;
      this.notebook._unsafe_delete_cell(0);
      $(this.selector).each((function(_this) {
        return function(i, el) {
          var button, cell;
          cell = _this.notebook.insert_cell_at_bottom('code');
          cell.set_text($(el).text());
          button = $('<button class=\'run\'>run</button>');
          $(el).replaceWith(cell.element);
          $(cell.element).prepend(button);
          cell.element.off('dblclick');
          return button.on('click', function(e) {
            button.text('running').addClass('running');
            return cell.execute();
          });
        };
      })(this));
      events.on('kernel_idle.Kernel', function(e, k) {
        return $('button.run.running').removeClass('running').text('run');
      });
      return this.notebook_el.hide();
    };

    Thebe.prototype.execute_below = function() {
      return this.notebook.execute_cells_below();
    };

    Thebe.prototype.start_notebook = function(base_url) {
      var acts, common_config, common_options, config_section, kernel_selector, keyboard_manager, pager, save_widget;
      common_options = {
        ws_url: '',
        base_url: base_url,
        notebook_path: '',
        notebook_name: ''
      };
      config_section = new configmod.ConfigSection('notebook', common_options);
      config_section.load();
      common_config = new configmod.ConfigSection('common', common_options);
      common_config.load();
      acts = new actions.init;
      pager = {};
      keyboard_manager = {
        edit_mode: function() {},
        command_mode: function() {},
        register_events: function() {},
        enable: function() {},
        disable: function() {}
      };
      keyboard_manager.edit_shortcuts = {
        handles: function() {}
      };
      save_widget = {
        update_document_title: function() {},
        contents: function() {}
      };
      contents = new contents.Contents({
        base_url: common_options.base_url,
        common_config: common_config
      });
      this.notebook_el = $('<div id=\'notebook\'></div>').prependTo('body');
      this.notebook = new notebook.Notebook('div#notebook', $.extend({
        events: events,
        keyboard_manager: keyboard_manager,
        save_widget: save_widget,
        contents: contents,
        config: config_section
      }, common_options));
      kernel_selector = new kernelselector.KernelSelector('#kernel_logo_widget', this.notebook);
      events.trigger('app_initialized.NotebookApp');
      utils.load_extensions_from_config(config_section);
      utils.load_extensions_from_config(common_config);
      this.notebook.load_notebook(common_options.notebook_path);
      return events.on('kernel_ready.Kernel', this.kernel_ready);
    };

    return Thebe;

  })();
  $(function() {
    var thebe;
    return thebe = new Thebe("pre[data-executable]", 'http://192.168.59.103:8000/spawn');
  });
  return Thebe;
});

//# sourceMappingURL=main.js.map
